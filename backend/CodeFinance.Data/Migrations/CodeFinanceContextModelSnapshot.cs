// <auto-generated />
using System;
using CodeFinance.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeFinance.Data.Migrations
{
    [DbContext(typeof(CodeFinanceContext))]
    partial class CodeFinanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DataCadastro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nome");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Meta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DataCadastro");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("DataInicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<decimal>("SaldoAtualMeta")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SaldoAtualMeta");

                    b.Property<string>("UrlImagemCapa")
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("UrlImageCapa");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorMeta")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorMeta");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Meta");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Movimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DataCadastro");

                    b.Property<DateTime>("DataMovimento")
                        .HasColumnType("datetime")
                        .HasColumnName("DataMovimento");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("Tipo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Titulo");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Movimentacao");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Orcamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DataCadastro");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime")
                        .HasColumnName("DataFim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("DataInicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorOrcamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorOrcamento");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Orcamento");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Saldo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataUltimaAlteracaoSaldo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SaldoAtual")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SaldoAtual");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Saldo");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Administrador")
                        .HasColumnType("bit")
                        .HasColumnName("Administrador");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DataCadastro");

                    b.Property<DateTime?>("DataExpiracaoToken")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Senha");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Sobrenome");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<string>("TokenAlterarSenha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioPaiId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Categoria", b =>
                {
                    b.HasOne("CodeFinance.Domain.Entidades.Usuario", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Meta", b =>
                {
                    b.HasOne("CodeFinance.Domain.Entidades.Usuario", "Usuario")
                        .WithMany("Metas")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Movimentacao", b =>
                {
                    b.HasOne("CodeFinance.Domain.Entidades.Categoria", "Categoria")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.HasOne("CodeFinance.Domain.Entidades.Usuario", "Usuario")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Orcamento", b =>
                {
                    b.HasOne("CodeFinance.Domain.Entidades.Categoria", "Categoria")
                        .WithMany("Orcamentos")
                        .HasForeignKey("CategoriaId")
                        .IsRequired();

                    b.HasOne("CodeFinance.Domain.Entidades.Usuario", "Usuario")
                        .WithMany("Orcamentos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Saldo", b =>
                {
                    b.HasOne("CodeFinance.Domain.Entidades.Usuario", "Usuario")
                        .WithOne("Saldo")
                        .HasForeignKey("CodeFinance.Domain.Entidades.Saldo", "UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Usuario", b =>
                {
                    b.HasOne("CodeFinance.Domain.Entidades.Usuario", "UsuarioPai")
                        .WithMany("UsuarioFilhos")
                        .HasForeignKey("UsuarioPaiId");

                    b.Navigation("UsuarioPai");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Categoria", b =>
                {
                    b.Navigation("Movimentacoes");

                    b.Navigation("Orcamentos");
                });

            modelBuilder.Entity("CodeFinance.Domain.Entidades.Usuario", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Metas");

                    b.Navigation("Movimentacoes");

                    b.Navigation("Orcamentos");

                    b.Navigation("Saldo");

                    b.Navigation("UsuarioFilhos");
                });
#pragma warning restore 612, 618
        }
    }
}
